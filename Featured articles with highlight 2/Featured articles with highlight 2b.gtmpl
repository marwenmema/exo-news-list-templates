<%
/**
* DESCRIPTION: a CLV (Content List or Content by Query portlet) template for displaying eXo Platform news articles.
* DATE: May 2021
* AUTHOR: Marwen Mema (marwenmema@gmail.com)
* SUPPORTED CLV DISPLAY PARAMETERS: Show header, Header name
**/

import org.exoplatform.wcm.webui.paginator.UICustomizeablePaginator;
import org.exoplatform.wcm.webui.clv.UICLVPortlet;
import org.exoplatform.wcm.webui.Utils;
import org.exoplatform.services.wcm.core.NodeLocation;
import org.exoplatform.services.jcr.core.ManageableRepository;
import org.exoplatform.services.wcm.utils.WCMCoreUtils;
import org.exoplatform.social.core.identity.model.Identity;
import org.exoplatform.social.core.identity.provider.OrganizationIdentityProvider;
import org.exoplatform.social.core.space.model.Space;
import org.exoplatform.social.core.space.spi.SpaceService;
import org.exoplatform.webui.application.WebuiRequestContext;
import org.exoplatform.portal.webui.util.Util;
import org.exoplatform.services.security.ConversationState;
import org.exoplatform.commons.utils.CommonsUtils;
import org.exoplatform.container.PortalContainer;
import org.exoplatform.news.NewsService;

import javax.jcr.Node;
import org.apache.commons.lang.StringEscapeUtils;
import org.htmlcleaner.HtmlCleaner;

import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.time.LocalDateTime;
import java.util.TimeZone;
import java.util.Date;

SpaceService spaceService = CommonsUtils.getService(SpaceService.class);
NewsService newsService = CommonsUtils.getService(NewsService.class);

public String getProfileFullName(String userName) {
  String profileFullName = "";
  Identity identity = org.exoplatform.social.webui.Utils.getIdentityManager().getOrCreateIdentity(OrganizationIdentityProvider.NAME, userName, true);
  if(identity != null && identity.getProfile() != null) {
    profileFullName = identity.getProfile().getFullName();
  }
  return StringEscapeUtils.escapeHtml(profileFullName);
}

def propertyName = "exo:title";
def repo = "";
def workspace = "";
def uuid = "";
def siteName = org.exoplatform.portal.webui.util.Util.getPortalRequestContext().getPortalOwner();
Locale locale = WebuiRequestContext.getCurrentInstance().getLocale();
def mediumDateFormat = DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM).withLocale(locale);

def language = locale.getLanguage();
def draftMsg = _ctx.appRes("PublicationStates.draft");
def publishedMsg = _ctx.appRes("PublicationStates.published");
def requestContext = _ctx.getRequestContext();
def jsManager = requestContext.getJavascriptManager();

if (uicomponent.getUIPageIterator().getAvailable() > 0) {
%>

<style type="text/css">

#featured-articles-with-highlight-2b {
  position: relative;
  overflow: hidden;
  background: #fff;
  height: 354px;
  margin: 0 0 20px 0; /* <-- adjust this margin if needed */
}
#featured-articles-with-highlight-2b .header-area {
  position: absolute;
  left: 50%;
  width: calc(50% - 15px);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  font-weight: 400;
  letter-spacing: .033em;
  text-transform: uppercase;
}
#featured-articles-with-highlight-2b .header-txt {
  font-size: 16px;
  color: var(--allPagesGreyColorLighten1,#a8b3c5);
  line-height: 18px;
  white-space: nowrap;
  overflow: hidden;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  margin-top: 15px;
}
#featured-articles-with-highlight-2b .seeAll-btn {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: #f5f5f5;
  height: 28px;
  width: auto;
  min-width: 52px;
  margin-top: 10px;
  padding: 0 12.4px;
  border-radius: 4px;
  text-decoration: none;
}
#featured-articles-with-highlight-2b .seeAll-btn:hover {
  background-color: #eeeeee;
  -webkit-transition: all .2s linear;
  -o-transition: all .2s linear;
  transition: all .2s linear;
}
#featured-articles-with-highlight-2b .seeAll-btn-text {
  font-size: 12px;
  color: #9e9e9e;
  text-transform: uppercase;
}
#featured-articles-with-highlight-2b .article-container {
  display: -ms-grid;
  display: grid;
  height: 100%;
  -ms-grid-rows: 48px 1fr 1fr 1fr;
  grid-template-rows: 48px 1fr 1fr 1fr;
  overflow: hidden;
}
#featured-articles-with-highlight-2b .article {
  position: relative;
  overflow: hidden;
  margin-right: 15px;
}
#featured-articles-with-highlight-2b .articleLink {
  position: absolute;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-decoration: none;
}
#featured-articles-with-highlight-2b .textArea {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 15px;
  font-size: 12px;
  letter-spacing: 0.2px;
  color: var(--allPagesGreyColorLighten1,#a8b3c5);
  line-height: 18px;
  overflow: hidden;
}
#featured-articles-with-highlight-2b .article-space {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  line-height: 12px;
  overflow: hidden;
  white-space: nowrap;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  margin-bottom: 8px;
}
#featured-articles-with-highlight-2b .article:first-child .article-space {
  margin-bottom: 11px;
}
#featured-articles-with-highlight-2b .space-image {
  position: relative;
  width: 20px;
  height: 20px;
  min-width: 20px;
  border-radius: 50%;
  -o-object-fit: cover;
     object-fit: cover;
  margin-right: 6px;
}
#featured-articles-with-highlight-2b .article:nth-child(n + 2) .space-image {
  display: none;
}
#featured-articles-with-highlight-2b .articleTitle {
  display: block;
  width: 100%;
  font-size: 16px;
  font-weight: 600;
  color: var(--allPagesBaseTextColor,#333);
  margin-bottom: 6px;
  -webkit-transition: 0.3s;
  -o-transition: 0.3s;
  transition: 0.3s;
}
#featured-articles-with-highlight-2b .article:first-child .articleTitle {
  margin-bottom: 14px;
}
#featured-articles-with-highlight-2b .article:hover .articleTitle,
#featured-articles-with-highlight-2b .article:focus .articleTitle,
#featured-articles-with-highlight-2b .article:active .articleTitle {
  text-decoration: underline;
  text-decoration-thickness: 2px;
  text-underline-offset: 2px;
}
#featured-articles-with-highlight-2b .article:first-child:hover .articleTitle,
#featured-articles-with-highlight-2b .article:first-child:focus .articleTitle,
#featured-articles-with-highlight-2b .article:first-child:active .articleTitle {
  text-decoration: underline;
  text-decoration-thickness: 3px;
  text-underline-offset: 3px;
}
#featured-articles-with-highlight-2b .articlePostTitle {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
  white-space: nowrap;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
}
#featured-articles-with-highlight-2b .articleDate {
  margin-right: 20px;
}
#featured-articles-with-highlight-2b .reactions {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
}
#featured-articles-with-highlight-2b .likes-icon {
  margin-right: 5px;
}
#featured-articles-with-highlight-2b .reactions svg {
  width: 10px;
  height: 10px;
  fill: #fff;
}
#featured-articles-with-highlight-2b .article:nth-child(n + 2) .reactions svg {
  fill: var(--allPagesGreyColorLighten1,#a8b3c5);
}
#featured-articles-with-highlight-2b .likes-count {
  margin-right: 8px;
  min-width: 6px;
  max-width: 20px;
}
#featured-articles-with-highlight-2b .comments-icon {
  margin-right: 5px;
}
#featured-articles-with-highlight-2b .comments-count {
  margin-right: 8px;
  min-width: 6px;
  max-width: 20px;
}
#featured-articles-with-highlight-2b .article:nth-child(1) {
  -ms-grid-column: 1;
  -ms-grid-column-span: 1;
  grid-column: 1 / 2;
  -ms-grid-row: 1;
  -ms-grid-row-span: 4;
  grid-row: 1 / 5;
}
#featured-articles-with-highlight-2b .article:nth-child(1) .textArea {
  position: relative;
  color: #fff;
  text-shadow: 0 0 4px rgb(0 0 0 / 86%);
  margin: auto 15px 15px 15px;
}
#featured-articles-with-highlight-2b .article:nth-child(1) .articleTitle {
  font-size: 22px;
  font-weight: 600;
  line-height: 30px;
  color: #fff;
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 5;
}
#featured-articles-with-highlight-2b .article:nth-child(n + 2) {
  -ms-grid-column: 2;
  -ms-grid-column-span: 1;
  grid-column: 2 / 3;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}
#featured-articles-with-highlight-2b .article:nth-child(2) {
  -ms-grid-row: 1;
  -ms-grid-row-span: 1;
  grid-row: 1 / 2;
  border-bottom: 1px solid #f2f2f2;
}
#featured-articles-with-highlight-2b .article:nth-child(3) {
  -ms-grid-row: 2;
  -ms-grid-row-span: 1;
  grid-row: 2 / 3;
  border-bottom: 1px solid #f2f2f2;
}
#featured-articles-with-highlight-2b .article:nth-child(4) {
  -ms-grid-row: 3;
  -ms-grid-row-span: 1;
  grid-row: 3 / 4;
}
#featured-articles-with-highlight-2b .article:nth-child(n + 2) .textArea {
  position: relative;
  width: 100%;
  margin: 0;
}
#featured-articles-with-highlight-2b .article:nth-child(n + 2) .articleTitle {
  font-weight: normal;
  line-height: 20px;
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  margin-bottom: 3px;
  padding-bottom: 3px;
}
#featured-articles-with-highlight-2b .article:nth-child(n + 5) {
  display: none;
}
#featured-articles-with-highlight-2b a {
  height: 100%;
  width: 100%;
}
#featured-articles-with-highlight-2b .articleImage img {
  max-width: 100%;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%;
  -webkit-transition: 0.4s;
  -o-transition: 0.4s;
  transition: 0.4s;
  -webkit-filter: brightness(0.61);
  filter: brightness(0.61);
}
#featured-articles-with-highlight-2b .article:hover .articleImage img {
  -webkit-transform: scale(1.06);
  -ms-transform: scale(1.06);
  transform: scale(1.06);
}
#featured-articles-with-highlight-2b .article:nth-child(n + 2) .articleImage {
  display: none;
}
/****** MOBILE VIEW ******/
/* Break point 1 */
#featured-articles-with-highlight-2b.BP1 .article:nth-child(n + 2) .textArea {
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  margin: auto 0;
}
/* Break point 2 */
#featured-articles-with-highlight-2b.BP2 .article-container {
  display: -ms-grid;
  display: grid;
  -ms-grid-rows: 100px 100px auto auto auto !important;
  grid-template-rows: 100px 100px auto auto auto !important;
  height: auto;
  overflow: hidden;
}
#featured-articles-with-highlight-2b.BP2 .header-area {
  display: none;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(1) {
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1 / 3;
  -ms-grid-row: 1;
  -ms-grid-row-span: 2;
  grid-row: 1 / 3;
  height: 200px;
  margin: 0;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(n + 2) {
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1 / 3;
  height: 87px;
  margin: 15px 15px 0 15px;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(2) {
  border-bottom: none;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(3) {
  border-bottom: none;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(2) {
  -ms-grid-row: 3;
  -ms-grid-row-span: 1;
  grid-row: 3 / 4;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(3) {
  -ms-grid-row: 4;
  -ms-grid-row-span: 1;
  grid-row: 4 / 5;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(4) {
  -ms-grid-row: 5;
  -ms-grid-row-span: 1;
  grid-row: 5 / 6;
  margin-bottom: 15px;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(1) .textArea {
  margin: auto 15px;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(n + 2) .textArea {
  margin: 0 0 0 15px;
}
#featured-articles-with-highlight-2b.BP2 .article:nth-child(1) .articleTitle {
  -webkit-line-clamp: 3;
}
/* Break point 3 */
#featured-articles-with-highlight-2b.BP3 .article-container {
  -ms-grid-rows: 100px 100px 110px 110px 110px !important;
  grid-template-rows: 100px 100px 110px 110px 110px !important;
}
#featured-articles-with-highlight-2b.BP3 .article:nth-child(n + 2) {
  height: auto;
  margin: 0 15px;
}
#featured-articles-with-highlight-2b.BP3 .article:nth-child(n + 2) .textArea {
  margin: auto 0;
}
/* Break point 4 */
#featured-articles-with-highlight-2b.BP4 .article:nth-child(1) .articleTitle {
  font-size: 18px;
  line-height: 24px;
}

</style>

<div id="featured-articles-with-highlight-2b" data-observe-resizes data-breakpoints='{"BP1":760,"BP2":600,"BP3":426,"BP4":360}'>
  <%
  def header = uicomponent.getHeader();
  def isShowHeader = uicomponent.isShowField(UICLVPortlet.PREFERENCE_SHOW_HEADER) && header != null && header.trim().length() != 0;
  if (isShowHeader) {
  %>
  <style>
    /* Apply the following styling if header is shown */
    #featured-articles-with-highlight-2b .article-container {
      -ms-grid-rows: 48px 1fr 1fr 1fr;
      grid-template-rows: 48px 1fr 1fr 1fr;
    }
    #featured-articles-with-highlight-2b .article:nth-child(2) {
      -ms-grid-row: 2;
      -ms-grid-row-span: 1;
      grid-row: 2 / 3;
    }
    #featured-articles-with-highlight-2b .article:nth-child(3) {
      -ms-grid-row: 3;
      -ms-grid-row-span: 1;
      grid-row: 3 / 4;
    }
    #featured-articles-with-highlight-2b .article:nth-child(4) {
      -ms-grid-row: 4;
      -ms-grid-row-span: 1;
      grid-row: 4 / 5;
    }
    #featured-articles-with-highlight-2a .articleLink {
      -webkit-box-align: start;
          -ms-flex-align: start;
              align-items: start;
    }
  </style>
  <div class="header-area">
    <div class="header-txt">$header</div>
    <a class="seeAll-btn" target="_self" href="/portal/dw/news">
      <%
      def seeAllBtn = "";
      if (language.equals("fr")) {
        seeAllBtn = "Voir tout";
      } else if (language.equals("de")) {
        seeAllBtn = "Alles sehen";
      } else if (language.equals("es")) {
        seeAllBtn = "Ver todo";
      } else if (language.equals("it")) {
        seeAllBtn = "Vedi tutto";
      } else if (language.equals("pt")) {
        seeAllBtn = "Ver tudo";
      } else if (language.equals("ru")) {
        seeAllBtn = "Увидеть все";
      } else if (language.equals("ar")) {
        seeAllBtn = "إظهار الكل";
      } else {
        seeAllBtn = "See all";
      }
      %>
      <div class="seeAll-btn-text">$seeAllBtn</div>
    </a>
  </div>
  <%
  }
  %>

  <div class="article-container">

<%

  def currentPageData = uicomponent.getCurrentPageData();

  for (def i = 0; i < currentPageData.size(); i++) {

  def viewNode = currentPageData.get(i);

  if(!Utils.isViewable(viewNode)) continue;
  def isShowTitle = uicomponent.isShowField(UICLVPortlet.PREFERENCE_SHOW_TITLE);
  def isShowDate = uicomponent.isShowField(UICLVPortlet.PREFERENCE_SHOW_DATE_CREATED);
  def isShowLink = uicomponent.isShowField(UICLVPortlet.PREFERENCE_SHOW_LINK);
  def isShowReadmore = uicomponent.isShowField(UICLVPortlet.PREFERENCE_SHOW_READMORE);

  def newsTitle = "";

  StringBuilder newsUrl = new StringBuilder("");
  if (viewNode.hasProperty("exo:activities")) {
    def newsActivityId =  viewNode.getProperty("exo:activities").getString().split(";")[0].split(":")[1];
    Space newsPostedInSpace = spaceService.getSpaceById( viewNode.getProperty("exo:activities").getString().split(";")[0].split(":")[0]);
    def portalName = PortalContainer.getCurrentPortalContainerName();
    def portalOwner = CommonsUtils.getCurrentPortalOwner();
    def currentUsername = newsService.getCurrentIdentity().getUserId();
    if (spaceService.isMember(newsPostedInSpace, currentUsername)) {
      newsUrl.append("/").append(portalName).append("/").append(portalOwner).append("/activity?id=").append(newsActivityId);
    } else {
      newsUrl.append("/").append(portalName).append("/").append(portalOwner).append("/news/detail?content-id=").append(newsService.getPath(viewNode));
    }
  }
  def itemLink = newsUrl.toString();

  def newsPostedDate = "";
  if(viewNode.hasProperty("publication:liveDate")) {
    def postedDate = LocalDateTime.ofInstant(viewNode.getProperty("publication:liveDate").getDate().toInstant(), TimeZone.getDefault().toZoneId());
    newsPostedDate = postedDate.format(mediumDateFormat);
  }

  def isShowImage = uicomponent.isShowField(UICLVPortlet.PREFERENCE_SHOW_ILLUSTRATION);
  def imgSrc;
  if(isShowImage) {
    if(viewNode.hasNode("illustration")) {
      def imageNode = viewNode.getNode("illustration");
      imgSrc = WCMCoreUtils.generateImageURI(imageNode, null);
    } else {
      imgSrc = '/news/images/newsImageDefault.png';
    }
  }

  def itemName = viewNode.getName();
  def itemTitle = uicomponent.getTitle(viewNode);

  if(viewNode.hasProperty("exo:title")) {
    newsTitle = StringEscapeUtils.escapeHtml(viewNode.getProperty("exo:title").getString());
  }

  def newsBody = "";
  if(viewNode.hasProperty("exo:body")) {
    newsBody = viewNode.getProperty("exo:body").getString();
    newsBody = new HtmlCleaner().clean(newsBody).getText();
  }

  def itemOwner = "";
  if(viewNode.hasProperty("exo:author")) {
    itemOwner = viewNode.getProperty("exo:author").getString();
    itemOwner = getProfileFullName(itemOwner);
  }

  def itemSummary = StringEscapeUtils.escapeHtml(uicomponent.getSummary(viewNode));
  def itemSummaryField = uicomponent.getSummaryField(viewNode);
  def isShowSummary = uicomponent.isShowField(UICLVPortlet.PREFERENCE_SHOW_SUMMARY) && itemSummary != null;
  def newsActivityId =  viewNode.getProperty("exo:activities").getString().split(";")[0].split(":")[1];

  repo = ((ManageableRepository)viewNode.getSession().getRepository()).getConfiguration().getName();
  workspace = viewNode.getSession().getWorkspace().getName();
  uuid = viewNode.getUUID();

%>

    <div class="article" id="article-$uuid">
      <a class="articleLink" target="_self" href="$itemLink">
        <div class="articleImage">
          <img src="$imgSrc">
        </div>
        <div class="textArea">
          <class class="article-space">
            <img class="space-image" src="">
            <span class="space-name"></span>
          </class>
          <span class="articleTitle">$newsTitle</span>
          <div class="articlePostTitle">
            <span class="articleDate">$newsPostedDate</span>
            <div class="reactions">
              <i class="likes-icon">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 489.543 489.543" style="enable-background:new 0 0 489.543 489.543;" xml:space="preserve">
                  <path d="M270.024,0c-22.6,0-15,48.3-15,48.3s-48.3,133.2-94.5,168.7c-9.9,10.4-16.1,21.9-20,31.3l0,0l0,0    c-0.9,2.3-1.7,4.5-2.4,6.5c-3.1,6.3-9.7,16-23.8,24.5l46.2,200.9c0,0,71.5,9.3,143.2,7.8c28.7,2.3,59.1,2.5,83.3-2.7    c82.2-17.5,61.6-74.8,61.6-74.8c44.3-33.3,19.1-74.9,19.1-74.9c39.4-41.1,0.7-75.6,0.7-75.6s21.3-33.2-6.2-58.3    c-34.3-31.4-127.4-10.5-127.4-10.5l0,0c-6.5,1.1-13.4,2.5-20.8,4.3c0,0-32.2,15,0-82.7C346.324,15.1,292.624,0,270.024,0z" />
                  <path d="M127.324,465.7l-35-166.3c-2-9.5-11.6-17.3-21.3-17.3h-66.8l-0.1,200.8h109.1C123.024,483,129.324,475.2,127.324,465.7z" />
                </svg>
              </i>
              <div class="likes-count"></div>
              <i class="comments-icon">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 60 60" style="enable-background:new 0 0 60 60;" xml:space="preserve">
                  <path d="M55.232,43.104C58.354,38.746,60,33.705,60,28.5c0-14.888-13.458-27-30-27S0,13.612,0,28.5s13.458,27,30,27  c4.262,0,8.378-0.79,12.244-2.348c6.805,3.927,16.212,5.282,16.618,5.338c0.046,0.007,0.093,0.01,0.139,0.01  c0.375,0,0.725-0.211,0.895-0.554c0.192-0.385,0.116-0.849-0.188-1.153C57.407,54.493,55.823,49.64,55.232,43.104z" />
                </svg>
              </i>
              <div class="comments-count"></div>
            </div>
          </div>
        </div>
      </a>
      <script>
        // Fetch and append article space, like count and comment count
        require(['SHARED/jquery'], function(jquery) {
          jquery.ajax({
            url: "/rest/v1/news/" + '$uuid',
            cache: false
          }).done(function (data) {
            if (data.spaceAvatarUrl != null) {
              jquery('#featured-articles-with-highlight-2b #article-$uuid .space-image').attr("src",data.spaceAvatarUrl);
            }
            if (data.spaceDisplayName != null) {
              jquery('#featured-articles-with-highlight-2b #article-$uuid .space-name').append(data.spaceDisplayName);
            }
          }).fail(function () {
            console.log("Could not fetch space avatar/name of news article!");
          })
          jquery.ajax({
            url: "/rest/v1/social/activities/" + '$newsActivityId' + "/likes",
            cache: false
          }).done(function (data) {
            if (data.likes != null) {
              jquery('#featured-articles-with-highlight-2b #article-$uuid .likes-count').append(data.likes.length);
            }
          }).fail(function () {
            console.log("Could not fetch the number of likes of news article!");
          })
          jquery.ajax({
            url: "/rest/v1/social/activities/" + '$newsActivityId' + "/comments",
            cache: false
          }).done(function (data) {
            if (data.comments != null) {
              jquery('#featured-articles-with-highlight-2b #article-$uuid .comments-count').append(data.comments.length);
            }
          }).fail(function () {
            console.log("Could not fetch the number of comments of news article!");
          })
        });
      </script>
    </div>

    <%
    }
  }
  %>

  </div>
</div>

<script>
  // A solution for enabling responsive containers (container queries)
  // Source and explanation: https://philipwalton.com/articles/responsive-components-a-solution-to-the-container-queries-problem/

  // Only run if ResizeObserver is supported.
  if ('ResizeObserver' in self) {
    // Create a single ResizeObserver instance to handle all
    // container elements. The instance is created with a callback,
    // which is invoked as soon as an element is observed as well
    // as any time that element's size changes.
    var ro = new ResizeObserver(function(entries) {
      // Default breakpoints that should apply to all observed
      // elements that don't define their own custom breakpoints.
      var defaultBreakpoints = {SM: 384, MD: 576, LG: 768, XL: 960};

      entries.forEach(function(entry) {
        // If breakpoints are defined on the observed element,
        // use them. Otherwise use the defaults.
        var breakpoints = entry.target.dataset.breakpoints ?
            JSON.parse(entry.target.dataset.breakpoints) :
            defaultBreakpoints;

        // Update the matching breakpoints on the observed element.
        Object.keys(breakpoints).forEach(function(breakpoint) {
          var maxWidth = breakpoints[breakpoint];
          if (entry.contentRect.width <= maxWidth) {
            entry.target.classList.add(breakpoint);
          } else {
            entry.target.classList.remove(breakpoint);
          }
        });
      });
    });

    // Find all elements with the `data-observe-resizes` attribute
    // and start observing them.
    var elements = document.querySelectorAll('[data-observe-resizes]');
    for (var element, i = 0; element = elements[i]; i++) {
      ro.observe(element);
    }
  }
</script>